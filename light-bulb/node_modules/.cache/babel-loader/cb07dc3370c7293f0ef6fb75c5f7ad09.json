{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/react-challenges/light-bulb/src/components/Bulb.js\";\nimport React, { Component } from 'react';\n\nclass Bulb extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      //destructure\n      let {\n        colors,\n        lightSwitch\n      } = this.state;\n\n      if (lightSwitch = \"off\") {\n        this.setState({\n          currentLightColor: \"white\",\n          currentLightSwitch: \"on\"\n        });\n        lightSwitch = \"on\";\n      }\n\n      if (lightSwitch = \"on\") {\n        this.setState({\n          currentLightColor: \"yellow\",\n          currentLightSwitch: \"off\"\n        });\n        lightSwitch = \"off\";\n      }\n    };\n\n    this.state = {\n      colors: [\"white\", \"yellow\"],\n      lightSwitch: [\"on\", \"off\"],\n      currentLightColor: \"click on me\",\n      currentLightSwitch: \"\"\n    };\n  }\n\n  render() {\n    const buttonStyle = {\n      backgroundColor: this.state.currentLightColor,\n      border: \"1px, solid, #000\",\n      fontSize: \"50px\",\n      height: \"400px\",\n      width: \"400px\",\n      padding: \"30px 30px\",\n      margin: \"50px 200px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: buttonStyle,\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \" \", this.state.currentLightColor, \"  \"));\n  }\n\n}\n\nexport default Bulb;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/react-challenges/light-bulb/src/components/Bulb.js"],"names":["React","Component","Bulb","constructor","props","handleChange","colors","lightSwitch","state","setState","currentLightColor","currentLightSwitch","render","buttonStyle","backgroundColor","border","fontSize","height","width","padding","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,YAXmB,GAWJ,MAAM;AACjB;AACA,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAA0B,KAAKC,KAAnC;;AAEA,UAAID,WAAW,GAAG,KAAlB,EAAyB;AACrB,aAAKE,QAAL,CAAc;AAAEC,UAAAA,iBAAiB,EAAE,OAArB;AAA8BC,UAAAA,kBAAkB,EAAE;AAAlD,SAAd;AACAJ,QAAAA,WAAW,GAAG,IAAd;AACH;;AACD,UAAIA,WAAW,GAAG,IAAlB,EAAwB;AACpB,aAAKE,QAAL,CAAc;AAAEC,UAAAA,iBAAiB,EAAE,QAArB;AAA+BC,UAAAA,kBAAkB,EAAE;AAAnD,SAAd;AACAJ,QAAAA,WAAW,GAAG,KAAd;AACH;AACJ,KAvBkB;;AAEf,SAAKC,KAAL,GAAa;AACTF,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,CADC;AAETC,MAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,KAAP,CAFJ;AAGTG,MAAAA,iBAAiB,EAAE,aAHV;AAITC,MAAAA,kBAAkB,EAAE;AAJX,KAAb;AAMH;;AAmBDC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG;AAChBC,MAAAA,eAAe,EAAE,KAAKN,KAAL,CAAWE,iBADZ;AAEhBK,MAAAA,MAAM,EAAE,kBAFQ;AAGhBC,MAAAA,QAAQ,EAAE,MAHM;AAIhBC,MAAAA,MAAM,EAAE,OAJQ;AAKhBC,MAAAA,KAAK,EAAE,OALS;AAMhBC,MAAAA,OAAO,EAAE,WANO;AAOhBC,MAAAA,MAAM,EAAE;AAPQ,KAApB;AASA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAEP,WAAf;AAA4B,MAAA,OAAO,EAAE,KAAKR,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2D,KAAKG,KAAL,CAAWE,iBAAtE,OADJ,CADJ;AAKH;;AA3CwB;;AA8C7B,eAAeR,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Bulb extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            colors: [\"white\", \"yellow\"],\n            lightSwitch: [\"on\", \"off\"],\n            currentLightColor: \"click on me\",\n            currentLightSwitch: \"\"\n        }\n    }\n\n\n    handleChange = () => {\n        //destructure\n        let { colors, lightSwitch } = this.state\n\n        if (lightSwitch = \"off\") {\n            this.setState({ currentLightColor: \"white\", currentLightSwitch: \"on\" })\n            lightSwitch = \"on\"\n        }\n        if (lightSwitch = \"on\") {\n            this.setState({ currentLightColor: \"yellow\", currentLightSwitch: \"off\" })\n            lightSwitch = \"off\"\n        }\n    }\n\n\n\n    render() {\n        const buttonStyle = {\n            backgroundColor: this.state.currentLightColor,\n            border: \"1px, solid, #000\",\n            fontSize: \"50px\",\n            height: \"400px\",\n            width: \"400px\",\n            padding: \"30px 30px\",\n            margin: \"50px 200px\"\n        }\n        return (\n            <div>\n                <button style={buttonStyle} onClick={this.handleChange} > {this.state.currentLightColor}  </button>\n            </div>\n        )\n    }\n}\n\nexport default Bulb"]},"metadata":{},"sourceType":"module"}