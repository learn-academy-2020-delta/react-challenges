{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/react-challenges/light-bulb/src/components/Bulb.js\";\nimport React, { Component } from 'react';\n\nclass Bulb extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      //destructure\n      let {\n        colors,\n        lightSwitch\n      } = this.state;\n      let newColor = colors[Math.floor(Math.random() * 2)];\n\n      if (lightSwitch = newColor[0]) {\n        this.setState({\n          currentLightColor: \"yellow\"\n        });\n      } else if (lightSwitch = newColors[1]) {\n        this.setState({\n          currentLightColor: \"white\"\n        });\n      }\n    };\n\n    this.state = {\n      colors: [\"white\", \"yellow\"],\n      lightSwitch: [\"on\", \"off\"],\n      currentLightColor: \"\"\n    };\n  }\n\n  render() {\n    const buttonStyle = {\n      backgroundColor: this.state.currentLightColor,\n      border: \"1px, solid, #000\",\n      fontSize: \"50px\",\n      height: \"400px\",\n      width: \"400px\",\n      padding: \"30px 30px\",\n      margin: \"50px 200px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: buttonStyle,\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \" \", this.state.currentLightColor, \"  \"));\n  }\n\n}\n\nexport default Bulb;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/react-challenges/light-bulb/src/components/Bulb.js"],"names":["React","Component","Bulb","constructor","props","handleChange","colors","lightSwitch","state","newColor","Math","floor","random","setState","currentLightColor","newColors","render","buttonStyle","backgroundColor","border","fontSize","height","width","padding","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,YAVmB,GAUJ,MAAM;AACjB;AACA,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAA0B,KAAKC,KAAnC;AAGA,UAAIC,QAAQ,GAAGH,MAAM,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAArB;;AACA,UAAIL,WAAW,GAAGE,QAAQ,CAAC,CAAD,CAA1B,EAA+B;AAC3B,aAAKI,QAAL,CAAc;AAAEC,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACH,OAFD,MAGK,IAAIP,WAAW,GAAGQ,SAAS,CAAC,CAAD,CAA3B,EAAgC;AACjC,aAAKF,QAAL,CAAc;AAAEC,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACH;AAEJ,KAvBkB;;AAEf,SAAKN,KAAL,GAAa;AACTF,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,CADC;AAETC,MAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,KAAP,CAFJ;AAGTO,MAAAA,iBAAiB,EAAE;AAHV,KAAb;AAKH;;AAoBDE,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG;AAChBC,MAAAA,eAAe,EAAE,KAAKV,KAAL,CAAWM,iBADZ;AAEhBK,MAAAA,MAAM,EAAE,kBAFQ;AAGhBC,MAAAA,QAAQ,EAAE,MAHM;AAIhBC,MAAAA,MAAM,EAAE,OAJQ;AAKhBC,MAAAA,KAAK,EAAE,OALS;AAMhBC,MAAAA,OAAO,EAAE,WANO;AAOhBC,MAAAA,MAAM,EAAE;AAPQ,KAApB;AASA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAEP,WAAf;AAA4B,MAAA,OAAO,EAAE,KAAKZ,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2D,KAAKG,KAAL,CAAWM,iBAAtE,OADJ,CADJ;AAKH;;AA3CwB;;AA8C7B,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Bulb extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            colors: [\"white\", \"yellow\"],\n            lightSwitch: [\"on\", \"off\"],\n            currentLightColor: \"\"\n        }\n    }\n\n\n    handleChange = () => {\n        //destructure\n        let { colors, lightSwitch } = this.state\n\n\n        let newColor = colors[Math.floor(Math.random() * 2)]\n        if (lightSwitch = newColor[0]) {\n            this.setState({ currentLightColor: \"yellow\" })\n        }\n        else if (lightSwitch = newColors[1]) {\n            this.setState({ currentLightColor: \"white\" })\n        }\n\n    }\n\n\n\n    render() {\n        const buttonStyle = {\n            backgroundColor: this.state.currentLightColor,\n            border: \"1px, solid, #000\",\n            fontSize: \"50px\",\n            height: \"400px\",\n            width: \"400px\",\n            padding: \"30px 30px\",\n            margin: \"50px 200px\"\n        }\n        return (\n            <div>\n                <button style={buttonStyle} onClick={this.handleChange} > {this.state.currentLightColor}  </button>\n            </div>\n        )\n    }\n}\n\nexport default Bulb"]},"metadata":{},"sourceType":"module"}