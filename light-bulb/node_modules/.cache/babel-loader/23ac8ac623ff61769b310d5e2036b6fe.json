{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/react-challenges/light-bulb/src/components/Bulb.js\";\nimport React, { Component } from 'react';\n\nclass Bulb extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      //destructure\n      let {\n        light\n      } = this.state; //ternary to switch between on and off.\n\n      return light === \"off\" ? this.setState({\n        color: \"yellow\",\n        light: \"on\"\n      }) : this.setState({\n        color: \"white\",\n        light: \"off\"\n      }); // if (light === \"off\") {\n      //     this.setState({\n      //         color: \"yellow\",\n      //         light: \"on\",\n      //     })\n      // }\n      // else {\n      //     this.setState({\n      //         color: \"white\",\n      //         light: \"off\",\n      //     })\n      // }\n    };\n\n    this.state = {\n      color: \"\",\n      light: \"off\"\n    };\n  }\n\n  render() {\n    const buttonStyle = {\n      backgroundColor: this.state.color,\n      border: \"1px, solid, #000\",\n      fontSize: \"50px\",\n      height: \"400px\",\n      width: \"400px\",\n      padding: \"30px 30px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: ({\n        margin: \"auto\"\n      }, {\n        width: \"50%\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: buttonStyle,\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \" \", this.state.light, \" \"));\n  }\n\n}\n\nexport default Bulb;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/react-challenges/light-bulb/src/components/Bulb.js"],"names":["React","Component","Bulb","constructor","props","handleChange","light","state","setState","color","render","buttonStyle","backgroundColor","border","fontSize","height","width","padding","marginLeft","marginRight","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,YAXmB,GAWJ,MAAM;AACjB;AACA,UAAI;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAArB,CAFiB,CAGjB;;AACA,aAAOD,KAAK,KAAK,KAAV,GAAkB,KAAKE,QAAL,CAAc;AACnCC,QAAAA,KAAK,EAAE,QAD4B;AAEnCH,QAAAA,KAAK,EAAE;AAF4B,OAAd,CAAlB,GAGF,KAAKE,QAAL,CAAc;AACfC,QAAAA,KAAK,EAAE,OADQ;AAEfH,QAAAA,KAAK,EAAE;AAFQ,OAAd,CAHL,CAJiB,CAWjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAlCkB;;AAEf,SAAKC,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAE,EADE;AAETH,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKH;;AA8BDI,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG;AAChBC,MAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWE,KADZ;AAEhBI,MAAAA,MAAM,EAAE,kBAFQ;AAGhBC,MAAAA,QAAQ,EAAE,MAHM;AAIhBC,MAAAA,MAAM,EAAE,OAJQ;AAKhBC,MAAAA,KAAK,EAAE,OALS;AAMhBC,MAAAA,OAAO,EAAE,WANO;AAOhBC,MAAAA,UAAU,EAAE,MAPI;AAQhBC,MAAAA,WAAW,EAAE;AARG,KAApB;AAUA,wBACI;AAAK,MAAA,KAAK,GAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,SAAoB;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAtB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAEL,WAAf;AAA4B,MAAA,OAAO,EAAE,KAAKN,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2D,KAAKE,KAAL,CAAWD,KAAtE,MADJ,CADJ;AAKH;;AAtDwB;;AAyD7B,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Bulb extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            color: \"\",\n            light: \"off\"\n\n        }\n    }\n\n\n\n    handleChange = () => {\n        //destructure\n        let { light } = this.state\n        //ternary to switch between on and off.\n        return light === \"off\" ? this.setState({\n            color: \"yellow\",\n            light: \"on\",\n        }) : this.setState({\n            color: \"white\",\n            light: \"off\",\n        })\n        // if (light === \"off\") {\n        //     this.setState({\n        //         color: \"yellow\",\n        //         light: \"on\",\n        //     })\n        // }\n        // else {\n        //     this.setState({\n        //         color: \"white\",\n        //         light: \"off\",\n        //     })\n        // }\n    }\n\n\n    render() {\n        const buttonStyle = {\n            backgroundColor: this.state.color,\n            border: \"1px, solid, #000\",\n            fontSize: \"50px\",\n            height: \"400px\",\n            width: \"400px\",\n            padding: \"30px 30px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n        return (\n            <div style={{ margin: \"auto\" }, { width: \"50%\" }}>\n                <button style={buttonStyle} onClick={this.handleChange} > {this.state.light} </button>\n            </div >\n        )\n    }\n}\n\nexport default Bulb"]},"metadata":{},"sourceType":"module"}